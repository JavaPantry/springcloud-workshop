server.port=0

# unique id for this eureka client
spring.application.name=store-service

# turn ON client-side registration with eureka server (default is True)
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true

# point microservice to the eureka server
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# turn On logging for eureka and discovery (default is ON)
#logging.level.com.netflix.eureka=OFF
#logging.level.com.netflix.discovery=OFF

# logging pattern
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%C{1.} [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n

# add unique id to instances
eureka.instance.instance-id=${spring.application.name}:${random.uuid}} 


# following is the same as above "eureka.client.service-url.defaultZone=http://localhost:8761/eureka" and don't really need it
# eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

spring.cloud.config.username=avp
spring.cloud.config.password=password

spring.security.user.name=avp
spring.security.user.password=password

# [Spring Boot Config Data Import](https://docs.spring.io/spring-cloud-config/docs/3.0.5/reference/html/#config-data-import)
# note last slash `/` in the path is important. Without it you will get exception `File extension is not known to any PropertySourceLoader. If the location is meant to reference a directory, it must end in '/' or File.separator`
spring.config.import=optional:configserver:http://localhost:8888/
# suppose to specify config server url and fail fast if not available
spring.cloud.config.uri=http://localhost:8888
# suppose to `fail fast` if config server is not available, but in udemy course John meant that it will fail for unauthenticated access
# May 10: spring.cloud.config.fail-fast=true


