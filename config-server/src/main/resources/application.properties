server.port=8888

# unique id for this eureka client
spring.application.name=config-server
hostnameurl=host.docker.internal
# activate encryption - !!! Later we'll put it in environment variable
# should be here (NOT IN  bootstrap.properties)
encrypt.key=MySuperSecretKey

spring.cloud.config.server.git.uri=https://bitbucket.org/JavaPantry/config-server-repo
spring.cloud.config.server.git.username=JavaPantry
spring.cloud.config.server.git.password=C98LcSyS9wbmFuevstdz
spring.cloud.config.server.git.default-label=master
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.search-paths=/{application}

# point to local file system
# replace `\` with `/` for windows path
# ERROR should be outside current project folder. This is error location: spring.cloud.config.server.git.uri=file:///c:/IntelliJ_WS_SpringBootWorkshop/springcloud-sbsuite/config-server-repo
#spring.cloud.config.server.git.uri=file:///C:/IntelliJ_WS_SpringBootWorkshop/config-server-repo
#spring.cloud.config.server.git.search-paths=/{application}

spring.security.user.name=avp
spring.security.user.password=password

#eureka.client.service-url.defaultZone=http://netflix:eureka@localhost:8761/eureka
eureka.client.service-url.defaultZone=http://avp:password@${hostnameurl}:8761/eureka

logging.level.org.springframework.cloud=DEBUG
logging.level.org.springframework.web=DEBUG

## in Udemy course this isn't pointed to the eureka server
# point microservice to the eureka server
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka


# turn ON client-side registration with eureka server (default is True)
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true


# turn On logging for eureka and discovery (default is ON)
#logging.level.com.netflix.eureka=OFF
#logging.level.com.netflix.discovery=OFF

# logging pattern
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%C{1.} [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n

# add unique id to instances
eureka.instance.instance-id=${spring.application.name}:${random.uuid}} 
