server.port=8765

# unique id for this eureka server
spring.application.name=api-gateway
hostnameurl=host.docker.internal
# turn ON client-side registration with eureka server (default is True)
#eureka.client.register-with-eureka=false
#eureka.client.fetch-registry=false

# point microservice to the eureka server
eureka.client.service-url.defaultZone=http://${hostnameurl}:8761/eureka

# turn On logging for eureka and discovery (default is ON)
#logging.level.com.netflix.eureka=OFF
#logging.level.com.netflix.discovery=OFF

# logging pattern
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%C{1.} [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} - %msg%n

# api-gateway config
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# custom reroute for inventory service
spring.cloud.gateway.routes[0].id=inventory
spring.cloud.gateway.routes[0].uri=lb://inventory-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/inventory/test
spring.cloud.gateway.routes[0].predicates[1]=Method=GET

# TODO check if "/store/inventory" will work
# custom reroute for inventory service
spring.cloud.gateway.routes[1].id=inventory1
spring.cloud.gateway.routes[1].uri=lb://inventory-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/inventory
spring.cloud.gateway.routes[1].predicates[1]=Method=GET

# custom reroute for store service
spring.cloud.gateway.routes[2].id=store
spring.cloud.gateway.routes[2].uri=lb://store-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/store/inventory
spring.cloud.gateway.routes[2].predicates[1]=Method=GET

# custom reroute for python client
#spring.cloud.gateway.routes[2].id=python-client
#spring.cloud.gateway.routes[2].uri=lb://data-aggregation-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/readFolder
#spring.cloud.gateway.routes[2].predicates[1]=Method=GET